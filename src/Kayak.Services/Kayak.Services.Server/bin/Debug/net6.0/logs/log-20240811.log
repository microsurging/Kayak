{"@timestamp":"2024-08-11T02:05:01.9024708+08:00","level":"Warning","messageTemplate":"无法获取路由信息，因为节点：services/mqttServiceRoutes/，不存在。","message":"无法获取路由信息，因为节点：services/mqttServiceRoutes/，不存在。","fields":{"SourceContext":"Surging.Core.Consul.ConsulMqttServiceRouteManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:05:04.0705239+08:00","level":"Error","messageTemplate":"Rtmp服务主机启动失败，监听地址：127.0.0.1:76。 ","message":"Rtmp服务主机启动失败，监听地址：127.0.0.1:76。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtmpMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:05:04.8607718+08:00","level":"Error","messageTemplate":"Rtp服务主机启动失败，监听地址：127.0.0.1:46。 ","message":"Rtp服务主机启动失败，监听地址：127.0.0.1:46。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtspMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:05:04.8906250+08:00","level":"Error","messageTemplate":"Rtsp服务主机启动失败，监听地址：127.0.0.1:46。 ","message":"Rtsp服务主机启动失败，监听地址：127.0.0.1:46。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtspMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:05:05.6974367+08:00","level":"Error","messageTemplate":"HttpFlv服务主机启动失败，监听地址：127.0.0.1:8080。 ","message":"HttpFlv服务主机启动失败，监听地址：127.0.0.1:8080。 ","fields":{"SourceContext":"Surging.Core.LiveStream.HttpFlvMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:05:06.9234084+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:05:14.5434007+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:05:14.5463278+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:05:58.4276275+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:06:58.0635691+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:07:49.4353911+08:00","level":"Warning","messageTemplate":"无法获取路由信息，因为节点：services/mqttServiceRoutes/，不存在。","message":"无法获取路由信息，因为节点：services/mqttServiceRoutes/，不存在。","fields":{"SourceContext":"Surging.Core.Consul.ConsulMqttServiceRouteManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:07:51.4067436+08:00","level":"Error","messageTemplate":"Rtmp服务主机启动失败，监听地址：127.0.0.1:76。 ","message":"Rtmp服务主机启动失败，监听地址：127.0.0.1:76。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtmpMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:07:52.1764672+08:00","level":"Error","messageTemplate":"Rtp服务主机启动失败，监听地址：127.0.0.1:46。 ","message":"Rtp服务主机启动失败，监听地址：127.0.0.1:46。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtspMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:07:52.2095015+08:00","level":"Error","messageTemplate":"Rtsp服务主机启动失败，监听地址：127.0.0.1:46。 ","message":"Rtsp服务主机启动失败，监听地址：127.0.0.1:46。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtspMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:07:53.0761085+08:00","level":"Error","messageTemplate":"HttpFlv服务主机启动失败，监听地址：127.0.0.1:8080。 ","message":"HttpFlv服务主机启动失败，监听地址：127.0.0.1:8080。 ","fields":{"SourceContext":"Surging.Core.LiveStream.HttpFlvMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:07:54.2057683+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:08:06.7563896+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:08:06.7617619+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:08:12.8314859+08:00","level":"Warning","messageTemplate":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","message":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","fields":{"SourceContext":"Surging.Core.CPlatform.Routing.Implementation.DefaultServiceRouteProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:08:12.8341065+08:00","level":"Warning","messageTemplate":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","message":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","fields":{"SourceContext":"Surging.Core.CPlatform.Routing.Implementation.DefaultServiceRouteProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:08:12.9530981+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.Authentication_param，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.Authentication_param，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:08:13.5007309+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:08:17.1947325+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetSysDictionaryByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetSysDictionaryByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:08:17.4641681+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:08:18.3176742+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:08:18.3201167+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetSysDictionaryByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetSysDictionaryByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:08:20.5709611+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:08:20.8064645+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:08:46.7839250+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:09:29.6071857+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:09:37.0247110+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:09:37.8051637+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:09:37.8484344+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:09:42.4635215+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:09:46.7321265+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:10:46.6812640+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:11:46.6770105+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:11.1488146+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:17.1706694+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:18.0087528+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:18.0417138+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:21.2001463+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetSysDictionaryByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetSysDictionaryByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:21.2083963+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:23.7856815+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetSysDictionaryByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetSysDictionaryByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:24.1454578+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:26.7638245+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetSysDictionaryByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetSysDictionaryByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:26.7682232+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:28.5421234+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:32.3084281+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:32.3093402+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:32.3183461+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:46.7756086+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:47.7821916+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:47.7868904+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysDictionaryService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:12:47.7869047+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:13:03.9661735+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:13:04.7404731+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:13:04.7752129+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:13:46.6780567+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:14:46.7752100+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:14:49.0692178+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:14:54.1596564+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:14:54.9595768+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:14:54.9837772+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:15:46.7227036+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:16:46.6915018+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:17:46.8952744+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:18:05.8977232+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:18:15.6572592+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:18:16.5455226+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:18:16.5748734+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:18:43.2332179+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:18:46.9043908+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:18:49.2005641+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:18:55.4857940+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:19:46.8896978+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:20:46.7173064+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:21:46.7034588+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:22:46.7039599+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:23:46.7800560+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:24:46.6488658+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:25:46.6453085+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:26:46.6717079+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:27:46.7629831+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:28:46.6508819+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:29:46.8339099+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:30:46.7138920+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:53:37.3358889+08:00","level":"Warning","messageTemplate":"无法获取路由信息，因为节点：services/mqttServiceRoutes/，不存在。","message":"无法获取路由信息，因为节点：services/mqttServiceRoutes/，不存在。","fields":{"SourceContext":"Surging.Core.Consul.ConsulMqttServiceRouteManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:53:39.1215945+08:00","level":"Error","messageTemplate":"Rtmp服务主机启动失败，监听地址：127.0.0.1:76。 ","message":"Rtmp服务主机启动失败，监听地址：127.0.0.1:76。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtmpMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:53:39.8125295+08:00","level":"Error","messageTemplate":"Rtp服务主机启动失败，监听地址：127.0.0.1:46。 ","message":"Rtp服务主机启动失败，监听地址：127.0.0.1:46。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtspMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:53:39.8377705+08:00","level":"Error","messageTemplate":"Rtsp服务主机启动失败，监听地址：127.0.0.1:46。 ","message":"Rtsp服务主机启动失败，监听地址：127.0.0.1:46。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtspMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:53:40.7029284+08:00","level":"Error","messageTemplate":"HttpFlv服务主机启动失败，监听地址：127.0.0.1:8080。 ","message":"HttpFlv服务主机启动失败，监听地址：127.0.0.1:8080。 ","fields":{"SourceContext":"Surging.Core.LiveStream.HttpFlvMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:53:41.6927046+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:54:11.1929786+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:54:11.1947242+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:54:11.2299874+08:00","level":"Warning","messageTemplate":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","message":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","fields":{"SourceContext":"Surging.Core.CPlatform.Routing.Implementation.DefaultServiceRouteProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:54:11.2307361+08:00","level":"Warning","messageTemplate":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","message":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","fields":{"SourceContext":"Surging.Core.CPlatform.Routing.Implementation.DefaultServiceRouteProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:54:11.3591794+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.Authentication_param，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.Authentication_param，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:54:12.3201850+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:54:32.2427054+08:00","level":"Warning","messageTemplate":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","message":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","fields":{"SourceContext":"Surging.Core.CPlatform.Routing.Implementation.DefaultServiceRouteProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:54:32.2427765+08:00","level":"Warning","messageTemplate":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","message":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","fields":{"SourceContext":"Surging.Core.CPlatform.Routing.Implementation.DefaultServiceRouteProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:54:32.2429520+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.Authentication_param，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.Authentication_param，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:54:32.2740033+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:54:33.7563772+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:55:33.7772448+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:55:55.5661072+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:56:06.2311915+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:56:06.5916240+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:56:14.3654866+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.GetUserInfo，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:56:14.8435982+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:56:14.9495783+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetPageAsync_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:56:33.8561667+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:56:41.3750803+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:56:41.5672145+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:56:41.9763584+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:56:42.1462764+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:56:44.2675921+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:56:57.4419601+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:56:57.6671082+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysOrganizationService.GetSysOrganizationByCondition_query，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:57:33.8421355+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:58:33.8544399+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T02:59:33.8428480+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:00:33.8834604+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:01:33.9042254+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:02:33.9080527+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:03:33.8799716+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:04:33.8752137+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:05:33.8803918+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:06:33.9665123+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:07:33.8585836+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:08:33.8230576+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:09:33.8895683+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:10:33.8773247+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:11:33.8282009+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:12:33.8353302+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:13:33.9260363+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:14:33.8875849+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:15:33.8646309+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:16:33.8412332+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:17:33.9017390+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:18:33.8870942+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:19:33.8714261+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:20:33.8598280+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:21:33.8461859+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:22:33.8894610+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:23:33.8721046+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:24:33.8540737+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:25:33.8981632+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T03:26:33.8783299+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:55:35.2346873+08:00","level":"Warning","messageTemplate":"无法获取路由信息，因为节点：services/mqttServiceRoutes/，不存在。","message":"无法获取路由信息，因为节点：services/mqttServiceRoutes/，不存在。","fields":{"SourceContext":"Surging.Core.Consul.ConsulMqttServiceRouteManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:55:37.8957794+08:00","level":"Error","messageTemplate":"Rtmp服务主机启动失败，监听地址：127.0.0.1:76。 ","message":"Rtmp服务主机启动失败，监听地址：127.0.0.1:76。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtmpMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:55:38.7014662+08:00","level":"Error","messageTemplate":"Rtp服务主机启动失败，监听地址：127.0.0.1:46。 ","message":"Rtp服务主机启动失败，监听地址：127.0.0.1:46。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtspMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:55:38.7274911+08:00","level":"Error","messageTemplate":"Rtsp服务主机启动失败，监听地址：127.0.0.1:46。 ","message":"Rtsp服务主机启动失败，监听地址：127.0.0.1:46。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtspMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:55:39.6676178+08:00","level":"Error","messageTemplate":"HttpFlv服务主机启动失败，监听地址：127.0.0.1:8080。 ","message":"HttpFlv服务主机启动失败，监听地址：127.0.0.1:8080。 ","fields":{"SourceContext":"Surging.Core.LiveStream.HttpFlvMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:55:40.8691208+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:56:07.9632068+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:56:07.9650330+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:56:10.0980483+08:00","level":"Error","messageTemplate":"执行本地逻辑时候发生了错误。","message":"执行本地逻辑时候发生了错误。","exceptions":[{"Depth":0,"ClassName":"System.InvalidOperationException","Message":"A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.","Source":"Microsoft.EntityFrameworkCore","StackTraceString":"   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Kayak.Modules.System.Repositories.SysDictionaryRepository.ExistsModelByName(Int32 id, String parentCode, String name) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Repositories\\SysDictionaryRepository.cs:line 75\r\n   at Kayak.Modules.System.Domians.SysDictionaryService.Validate(SysDictionaryModel model) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Domians\\SysDictionaryService.cs:line 83\r\n   at Surging.Core.KestrelHttpServer.HttpExecutor.LocalExecuteAsync(ServiceEntry entry, HttpMessage httpMessage) in E:\\kayak\\src\\surging\\Surging.Core\\Surging.Core.KestrelHttpServer\\HttpExecutor.cs:line 142","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233079,"HelpURL":null}],"fields":{"SourceContext":"Surging.Core.KestrelHttpServer.HttpExecutor","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:56:10.1765570+08:00","level":"Error","messageTemplate":"执行本地逻辑时候发生了错误。","message":"执行本地逻辑时候发生了错误。","exceptions":[{"Depth":0,"ClassName":"System.InvalidOperationException","Message":"A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.","Source":"Microsoft.EntityFrameworkCore","StackTraceString":"   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Kayak.Modules.System.Repositories.SysDictionaryRepository.ExistsModelByName(Int32 id, String parentCode, String name) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Repositories\\SysDictionaryRepository.cs:line 75\r\n   at Kayak.Modules.System.Domians.SysDictionaryService.Validate(SysDictionaryModel model) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Domians\\SysDictionaryService.cs:line 83\r\n   at Surging.Core.KestrelHttpServer.HttpExecutor.LocalExecuteAsync(ServiceEntry entry, HttpMessage httpMessage) in E:\\kayak\\src\\surging\\Surging.Core\\Surging.Core.KestrelHttpServer\\HttpExecutor.cs:line 142","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233079,"HelpURL":null}],"fields":{"SourceContext":"Surging.Core.KestrelHttpServer.HttpExecutor","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:56:10.1755084+08:00","level":"Error","messageTemplate":"执行本地逻辑时候发生了错误。","message":"执行本地逻辑时候发生了错误。","exceptions":[{"Depth":0,"ClassName":"System.InvalidOperationException","Message":"A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.","Source":"Microsoft.EntityFrameworkCore","StackTraceString":"   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Kayak.Modules.System.Repositories.SysDictionaryRepository.ExistsModelByName(Int32 id, String parentCode, String name) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Repositories\\SysDictionaryRepository.cs:line 75\r\n   at Kayak.Modules.System.Domians.SysDictionaryService.Validate(SysDictionaryModel model) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Domians\\SysDictionaryService.cs:line 83\r\n   at Surging.Core.KestrelHttpServer.HttpExecutor.LocalExecuteAsync(ServiceEntry entry, HttpMessage httpMessage) in E:\\kayak\\src\\surging\\Surging.Core\\Surging.Core.KestrelHttpServer\\HttpExecutor.cs:line 142","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233079,"HelpURL":null}],"fields":{"SourceContext":"Surging.Core.KestrelHttpServer.HttpExecutor","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:56:10.1779607+08:00","level":"Error","messageTemplate":"执行本地逻辑时候发生了错误。","message":"执行本地逻辑时候发生了错误。","exceptions":[{"Depth":0,"ClassName":"System.InvalidOperationException","Message":"A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.","Source":"Microsoft.EntityFrameworkCore","StackTraceString":"   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Kayak.Modules.System.Repositories.SysDictionaryRepository.ExistsModelByName(Int32 id, String parentCode, String name) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Repositories\\SysDictionaryRepository.cs:line 75\r\n   at Kayak.Modules.System.Domians.SysDictionaryService.Validate(SysDictionaryModel model) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Domians\\SysDictionaryService.cs:line 83\r\n   at Surging.Core.KestrelHttpServer.HttpExecutor.LocalExecuteAsync(ServiceEntry entry, HttpMessage httpMessage) in E:\\kayak\\src\\surging\\Surging.Core\\Surging.Core.KestrelHttpServer\\HttpExecutor.cs:line 142","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233079,"HelpURL":null}],"fields":{"SourceContext":"Surging.Core.KestrelHttpServer.HttpExecutor","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:56:10.1784277+08:00","level":"Error","messageTemplate":"执行本地逻辑时候发生了错误。","message":"执行本地逻辑时候发生了错误。","exceptions":[{"Depth":0,"ClassName":"System.InvalidOperationException","Message":"A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.","Source":"Microsoft.EntityFrameworkCore","StackTraceString":"   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Kayak.Modules.System.Repositories.SysDictionaryRepository.ExistsModelByName(Int32 id, String parentCode, String name) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Repositories\\SysDictionaryRepository.cs:line 75\r\n   at Kayak.Modules.System.Domians.SysDictionaryService.Validate(SysDictionaryModel model) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Domians\\SysDictionaryService.cs:line 83\r\n   at Surging.Core.KestrelHttpServer.HttpExecutor.LocalExecuteAsync(ServiceEntry entry, HttpMessage httpMessage) in E:\\kayak\\src\\surging\\Surging.Core\\Surging.Core.KestrelHttpServer\\HttpExecutor.cs:line 142","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233079,"HelpURL":null}],"fields":{"SourceContext":"Surging.Core.KestrelHttpServer.HttpExecutor","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:56:10.1788497+08:00","level":"Error","messageTemplate":"执行本地逻辑时候发生了错误。","message":"执行本地逻辑时候发生了错误。","exceptions":[{"Depth":0,"ClassName":"System.InvalidOperationException","Message":"A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.","Source":"Microsoft.EntityFrameworkCore","StackTraceString":"   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Kayak.Modules.System.Repositories.SysDictionaryRepository.ExistsModelByName(Int32 id, String parentCode, String name) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Repositories\\SysDictionaryRepository.cs:line 75\r\n   at Kayak.Modules.System.Domians.SysDictionaryService.Validate(SysDictionaryModel model) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Domians\\SysDictionaryService.cs:line 83\r\n   at Surging.Core.KestrelHttpServer.HttpExecutor.LocalExecuteAsync(ServiceEntry entry, HttpMessage httpMessage) in E:\\kayak\\src\\surging\\Surging.Core\\Surging.Core.KestrelHttpServer\\HttpExecutor.cs:line 142","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233079,"HelpURL":null}],"fields":{"SourceContext":"Surging.Core.KestrelHttpServer.HttpExecutor","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:56:10.9617309+08:00","level":"Error","messageTemplate":"执行本地逻辑时候发生了错误。","message":"执行本地逻辑时候发生了错误。","exceptions":[{"Depth":0,"ClassName":"System.InvalidOperationException","Message":"A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.","Source":"Microsoft.EntityFrameworkCore","StackTraceString":"   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Kayak.Modules.System.Repositories.SysDictionaryRepository.ExistsModelByName(Int32 id, String parentCode, String name) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Repositories\\SysDictionaryRepository.cs:line 75\r\n   at Kayak.Modules.System.Domians.SysDictionaryService.Validate(SysDictionaryModel model) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Domians\\SysDictionaryService.cs:line 83\r\n   at Surging.Core.KestrelHttpServer.HttpExecutor.LocalExecuteAsync(ServiceEntry entry, HttpMessage httpMessage) in E:\\kayak\\src\\surging\\Surging.Core\\Surging.Core.KestrelHttpServer\\HttpExecutor.cs:line 142","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233079,"HelpURL":null}],"fields":{"SourceContext":"Surging.Core.KestrelHttpServer.HttpExecutor","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:56:11.1162169+08:00","level":"Error","messageTemplate":"执行本地逻辑时候发生了错误。","message":"执行本地逻辑时候发生了错误。","exceptions":[{"Depth":0,"ClassName":"System.InvalidOperationException","Message":"A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.","Source":"Microsoft.EntityFrameworkCore","StackTraceString":"   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Kayak.Modules.System.Repositories.SysDictionaryRepository.ExistsModelByName(Int32 id, String parentCode, String name) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Repositories\\SysDictionaryRepository.cs:line 75\r\n   at Kayak.Modules.System.Domians.SysDictionaryService.Validate(SysDictionaryModel model) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Domians\\SysDictionaryService.cs:line 83\r\n   at Surging.Core.KestrelHttpServer.HttpExecutor.LocalExecuteAsync(ServiceEntry entry, HttpMessage httpMessage) in E:\\kayak\\src\\surging\\Surging.Core\\Surging.Core.KestrelHttpServer\\HttpExecutor.cs:line 142","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233079,"HelpURL":null}],"fields":{"SourceContext":"Surging.Core.KestrelHttpServer.HttpExecutor","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:56:11.1166480+08:00","level":"Error","messageTemplate":"执行本地逻辑时候发生了错误。","message":"执行本地逻辑时候发生了错误。","exceptions":[{"Depth":0,"ClassName":"System.InvalidOperationException","Message":"A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.","Source":"Microsoft.EntityFrameworkCore","StackTraceString":"   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Kayak.Modules.System.Repositories.SysDictionaryRepository.ExistsModelByName(Int32 id, String parentCode, String name) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Repositories\\SysDictionaryRepository.cs:line 75\r\n   at Kayak.Modules.System.Domians.SysDictionaryService.Validate(SysDictionaryModel model) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Domians\\SysDictionaryService.cs:line 83\r\n   at Surging.Core.KestrelHttpServer.HttpExecutor.LocalExecuteAsync(ServiceEntry entry, HttpMessage httpMessage) in E:\\kayak\\src\\surging\\Surging.Core\\Surging.Core.KestrelHttpServer\\HttpExecutor.cs:line 142","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233079,"HelpURL":null}],"fields":{"SourceContext":"Surging.Core.KestrelHttpServer.HttpExecutor","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:56:11.4605085+08:00","level":"Error","messageTemplate":"执行本地逻辑时候发生了错误。","message":"执行本地逻辑时候发生了错误。","exceptions":[{"Depth":0,"ClassName":"System.InvalidOperationException","Message":"A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.","Source":"Microsoft.EntityFrameworkCore","StackTraceString":"   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Kayak.Modules.System.Repositories.SysDictionaryRepository.ExistsModelByName(Int32 id, String parentCode, String name) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Repositories\\SysDictionaryRepository.cs:line 75\r\n   at Kayak.Modules.System.Domians.SysDictionaryService.Validate(SysDictionaryModel model) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Domians\\SysDictionaryService.cs:line 83\r\n   at Surging.Core.KestrelHttpServer.HttpExecutor.LocalExecuteAsync(ServiceEntry entry, HttpMessage httpMessage) in E:\\kayak\\src\\surging\\Surging.Core\\Surging.Core.KestrelHttpServer\\HttpExecutor.cs:line 142","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233079,"HelpURL":null}],"fields":{"SourceContext":"Surging.Core.KestrelHttpServer.HttpExecutor","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:57:02.6226073+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:57:30.9759154+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:58:30.9845687+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:59:14.1144527+08:00","level":"Error","messageTemplate":"执行本地逻辑时候发生了错误。","message":"执行本地逻辑时候发生了错误。","exceptions":[{"Depth":0,"ClassName":"System.InvalidOperationException","Message":"A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.","Source":"Microsoft.EntityFrameworkCore","StackTraceString":"   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Kayak.Core.Common.Repsitories.Implementation.EFRepository`1.GetPageList(Int32 page, Int32 size, Func`2 expression, Expression`1 selector, Expression`1 funcSort, OrderByTypeEnum orderByType) in E:\\kayak\\src\\Kayak.Core\\Kayak.Core.Common\\Repsitories\\Implementation\\EFRepository.cs:line 399\r\n   at Kayak.Modules.System.Repositories.SysUserRepository.GetPageAsync(SysUserQuery query) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Repositories\\SysUserRepository.cs:line 93\r\n   at Kayak.Modules.System.Domians.SysUserService.GetPageAsync(SysUserQuery query) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Domians\\SysUserService.cs:line 84\r\n   at Surging.Core.KestrelHttpServer.HttpExecutor.LocalExecuteAsync(ServiceEntry entry, HttpMessage httpMessage) in E:\\kayak\\src\\surging\\Surging.Core\\Surging.Core.KestrelHttpServer\\HttpExecutor.cs:line 142","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233079,"HelpURL":null}],"fields":{"SourceContext":"Surging.Core.KestrelHttpServer.HttpExecutor","Application":"Sample"}}
{"@timestamp":"2024-08-11T10:59:30.9847889+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:00:46.1519023+08:00","level":"Warning","messageTemplate":"无法获取路由信息，因为节点：services/mqttServiceRoutes/，不存在。","message":"无法获取路由信息，因为节点：services/mqttServiceRoutes/，不存在。","fields":{"SourceContext":"Surging.Core.Consul.ConsulMqttServiceRouteManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:00:48.1350178+08:00","level":"Error","messageTemplate":"Rtmp服务主机启动失败，监听地址：127.0.0.1:76。 ","message":"Rtmp服务主机启动失败，监听地址：127.0.0.1:76。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtmpMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:00:48.8709969+08:00","level":"Error","messageTemplate":"Rtp服务主机启动失败，监听地址：127.0.0.1:46。 ","message":"Rtp服务主机启动失败，监听地址：127.0.0.1:46。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtspMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:00:48.9002246+08:00","level":"Error","messageTemplate":"Rtsp服务主机启动失败，监听地址：127.0.0.1:46。 ","message":"Rtsp服务主机启动失败，监听地址：127.0.0.1:46。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtspMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:00:49.7701681+08:00","level":"Error","messageTemplate":"HttpFlv服务主机启动失败，监听地址：127.0.0.1:8080。 ","message":"HttpFlv服务主机启动失败，监听地址：127.0.0.1:8080。 ","fields":{"SourceContext":"Surging.Core.LiveStream.HttpFlvMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:00:50.8691357+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:01:03.1457012+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:01:03.1690065+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:01:04.8600087+08:00","level":"Error","messageTemplate":"执行本地逻辑时候发生了错误。","message":"执行本地逻辑时候发生了错误。","exceptions":[{"Depth":0,"ClassName":"System.InvalidOperationException","Message":"A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.","Source":"Microsoft.EntityFrameworkCore","StackTraceString":"   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)\r\n   at Kayak.Modules.System.Repositories.SysDictionaryRepository.GetSysDictionaryByCondition(SysDictionaryQuery query) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Repositories\\SysDictionaryRepository.cs:line 68\r\n   at Kayak.Modules.System.Domians.SysDictionaryService.GetSysDictionaryByCondition(SysDictionaryQuery query) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Domians\\SysDictionaryService.cs:line 43\r\n   at Surging.Core.KestrelHttpServer.HttpExecutor.LocalExecuteAsync(ServiceEntry entry, HttpMessage httpMessage) in E:\\kayak\\src\\surging\\Surging.Core\\Surging.Core.KestrelHttpServer\\HttpExecutor.cs:line 142","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233079,"HelpURL":null}],"fields":{"SourceContext":"Surging.Core.KestrelHttpServer.HttpExecutor","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:01:04.8884281+08:00","level":"Error","messageTemplate":"执行本地逻辑时候发生了错误。","message":"执行本地逻辑时候发生了错误。","exceptions":[{"Depth":0,"ClassName":"System.InvalidOperationException","Message":"A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.","Source":"Microsoft.EntityFrameworkCore","StackTraceString":"   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)\r\n   at Kayak.Core.Common.Repsitories.Implementation.EFRepository`1.GetPageList(Int32 page, Int32 size, Func`2 expression, Expression`1 selector, Expression`1 funcSort, OrderByTypeEnum orderByType) in E:\\kayak\\src\\Kayak.Core\\Kayak.Core.Common\\Repsitories\\Implementation\\EFRepository.cs:line 399\r\n   at Kayak.Modules.System.Repositories.SysUserRepository.GetPageAsync(SysUserQuery query) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Repositories\\SysUserRepository.cs:line 93\r\n   at Kayak.Modules.System.Domians.SysUserService.GetPageAsync(SysUserQuery query) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Domians\\SysUserService.cs:line 84\r\n   at Surging.Core.KestrelHttpServer.HttpExecutor.LocalExecuteAsync(ServiceEntry entry, HttpMessage httpMessage) in E:\\kayak\\src\\surging\\Surging.Core\\Surging.Core.KestrelHttpServer\\HttpExecutor.cs:line 142","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233079,"HelpURL":null}],"fields":{"SourceContext":"Surging.Core.KestrelHttpServer.HttpExecutor","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:01:43.0645070+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:05:05.7379518+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:05:05.7554904+08:00","level":"Information","messageTemplate":"缓存数据更新成功。","message":"缓存数据更新成功。","fields":{"SourceContext":"Surging.Core.Consul.ConsulServiceCacheManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:05:18.0915934+08:00","level":"Warning","messageTemplate":"根据服务路由路径：api/logout，找不到相关服务信息。","message":"根据服务路由路径：api/logout，找不到相关服务信息。","fields":{"SourceContext":"Surging.Core.CPlatform.Routing.Implementation.DefaultServiceRouteProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:05:18.0930728+08:00","level":"Warning","messageTemplate":"根据服务路由路径：api/logout，找不到相关服务信息。","message":"根据服务路由路径：api/logout，找不到相关服务信息。","fields":{"SourceContext":"Surging.Core.CPlatform.Routing.Implementation.DefaultServiceRouteProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:05:18.0932720+08:00","level":"Warning","messageTemplate":"根据服务路由路径：api/logout，找不到相关服务信息。","message":"根据服务路由路径：api/logout，找不到相关服务信息。","fields":{"SourceContext":"Surging.Core.CPlatform.Routing.Implementation.DefaultServiceRouteProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:06:51.2990033+08:00","level":"Warning","messageTemplate":"无法获取路由信息，因为节点：services/mqttServiceRoutes/，不存在。","message":"无法获取路由信息，因为节点：services/mqttServiceRoutes/，不存在。","fields":{"SourceContext":"Surging.Core.Consul.ConsulMqttServiceRouteManager","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:06:53.2288497+08:00","level":"Error","messageTemplate":"Rtmp服务主机启动失败，监听地址：127.0.0.1:76。 ","message":"Rtmp服务主机启动失败，监听地址：127.0.0.1:76。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtmpMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:06:53.9510716+08:00","level":"Error","messageTemplate":"Rtp服务主机启动失败，监听地址：127.0.0.1:46。 ","message":"Rtp服务主机启动失败，监听地址：127.0.0.1:46。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtspMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:06:53.9812398+08:00","level":"Error","messageTemplate":"Rtsp服务主机启动失败，监听地址：127.0.0.1:46。 ","message":"Rtsp服务主机启动失败，监听地址：127.0.0.1:46。 ","fields":{"SourceContext":"Surging.Core.LiveStream.RtspMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:06:54.8533592+08:00","level":"Error","messageTemplate":"HttpFlv服务主机启动失败，监听地址：127.0.0.1:8080。 ","message":"HttpFlv服务主机启动失败，监听地址：127.0.0.1:8080。 ","fields":{"SourceContext":"Surging.Core.LiveStream.HttpFlvMessageListener","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:06:55.9516479+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:06:59.3762207+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:06:59.3785317+08:00","level":"Information","messageTemplate":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","message":"发现了以下服务：Kayak.IModuleServices.DeviceAccess.INetworkPartService,Kayak.IModuleServices.DeviceAccess.IProtocolManageService,Kayak.IModuleServices.DeviceManage.IProductService,Kayak.IModuleServices.System.ISysDictionaryService,Kayak.IModuleServices.System.ISysOrganizationService,Kayak.IModuleServices.System.ISysUserService,Surging.Core.CPlatform.Module.IEchoService,Surging.Core.Consul.Internal.IHandlerService,Surging.Core.LiveStream.Runtime.ILiveRomtePublishService,Surging.Core.Protocol.Mqtt.Internal.Runtime.IMqttRomtePublishService。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Server.Implementation.ServiceDiscovery.Attributes.AttributeServiceEntryProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:06:59.4172528+08:00","level":"Warning","messageTemplate":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","message":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","fields":{"SourceContext":"Surging.Core.CPlatform.Routing.Implementation.DefaultServiceRouteProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:06:59.4183779+08:00","level":"Warning","messageTemplate":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","message":"根据服务路由路径：api/oauth2/token，找不到相关服务信息。","fields":{"SourceContext":"Surging.Core.CPlatform.Routing.Implementation.DefaultServiceRouteProvider","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:06:59.4956605+08:00","level":"Information","messageTemplate":"根据服务id：Kayak.IModuleServices.System.ISysUserService.Authentication_param，找到以下可用地址：127.0.0.1:82。","message":"根据服务id：Kayak.IModuleServices.System.ISysUserService.Authentication_param，找到以下可用地址：127.0.0.1:82。","fields":{"SourceContext":"Surging.Core.CPlatform.Runtime.Client.Address.Resolvers.Implementation.DefaultAddressResolver","Application":"Sample"}}
{"@timestamp":"2024-08-11T11:07:11.9597759+08:00","level":"Error","messageTemplate":"执行本地逻辑时候发生了错误。","message":"执行本地逻辑时候发生了错误。","exceptions":[{"Depth":0,"ClassName":"System.InvalidOperationException","Message":"A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.","Source":"Microsoft.EntityFrameworkCore","StackTraceString":"   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)\r\n   at Kayak.Core.Common.Repsitories.Implementation.EFRepository`1.GetPageList(Int32 page, Int32 size, Func`2 expression, Expression`1 selector, Expression`1 funcSort, OrderByTypeEnum orderByType)\r\n   at Kayak.Modules.System.Repositories.SysUserRepository.GetPageAsync(SysUserQuery query) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Repositories\\SysUserRepository.cs:line 93\r\n   at Kayak.Modules.System.Domians.SysUserService.GetPageAsync(SysUserQuery query) in E:\\kayak\\src\\Kayak.Modules\\Kayak.Modules.System\\Domians\\SysUserService.cs:line 84\r\n   at Surging.Core.KestrelHttpServer.HttpExecutor.LocalExecuteAsync(ServiceEntry entry, HttpMessage httpMessage) in E:\\kayak\\src\\surging\\Surging.Core\\Surging.Core.KestrelHttpServer\\HttpExecutor.cs:line 142","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233079,"HelpURL":null}],"fields":{"SourceContext":"Surging.Core.KestrelHttpServer.HttpExecutor","Application":"Sample"}}
